<?xml version="1.0" encoding="UTF-8"?>
<configurationDescriptor version="100">
  <logicalFolder name="root" displayName="root" projectFiles="true" kind="ROOT">
    <df root="../src" name="0">
      <df name="Eigen">
        <df name="src">
          <df name="Cholesky">
            <in>LDLT.h</in>
            <in>LLT.h</in>
            <in>LLT_MKL.h</in>
          </df>
          <df name="CholmodSupport">
            <in>CholmodSupport.h</in>
          </df>
          <df name="Core">
            <df name="arch">
              <df name="AltiVec">
                <in>Complex.h</in>
                <in>PacketMath.h</in>
              </df>
              <df name="Default">
                <in>Settings.h</in>
              </df>
              <df name="NEON">
                <in>Complex.h</in>
                <in>PacketMath.h</in>
              </df>
              <df name="SSE">
                <in>Complex.h</in>
                <in>MathFunctions.h</in>
                <in>PacketMath.h</in>
              </df>
            </df>
            <df name="products">
              <in>CoeffBasedProduct.h</in>
              <in>GeneralBlockPanelKernel.h</in>
              <in>GeneralMatrixMatrix.h</in>
              <in>GeneralMatrixMatrixTriangular.h</in>
              <in>GeneralMatrixMatrixTriangular_MKL.h</in>
              <in>GeneralMatrixMatrix_MKL.h</in>
              <in>GeneralMatrixVector.h</in>
              <in>GeneralMatrixVector_MKL.h</in>
              <in>Parallelizer.h</in>
              <in>SelfadjointMatrixMatrix.h</in>
              <in>SelfadjointMatrixMatrix_MKL.h</in>
              <in>SelfadjointMatrixVector.h</in>
              <in>SelfadjointMatrixVector_MKL.h</in>
              <in>SelfadjointProduct.h</in>
              <in>SelfadjointRank2Update.h</in>
              <in>TriangularMatrixMatrix.h</in>
              <in>TriangularMatrixMatrix_MKL.h</in>
              <in>TriangularMatrixVector.h</in>
              <in>TriangularMatrixVector_MKL.h</in>
              <in>TriangularSolverMatrix.h</in>
              <in>TriangularSolverMatrix_MKL.h</in>
              <in>TriangularSolverVector.h</in>
            </df>
            <df name="util">
              <in>BlasUtil.h</in>
              <in>Constants.h</in>
              <in>DisableStupidWarnings.h</in>
              <in>ForwardDeclarations.h</in>
              <in>MKL_support.h</in>
              <in>Macros.h</in>
              <in>Memory.h</in>
              <in>Meta.h</in>
              <in>NonMPL2.h</in>
              <in>ReenableStupidWarnings.h</in>
              <in>StaticAssert.h</in>
              <in>XprHelper.h</in>
            </df>
            <in>Array.h</in>
            <in>ArrayBase.h</in>
            <in>ArrayWrapper.h</in>
            <in>Assign.h</in>
            <in>Assign_MKL.h</in>
            <in>BandMatrix.h</in>
            <in>Block.h</in>
            <in>BooleanRedux.h</in>
            <in>CommaInitializer.h</in>
            <in>CoreIterators.h</in>
            <in>CwiseBinaryOp.h</in>
            <in>CwiseNullaryOp.h</in>
            <in>CwiseUnaryOp.h</in>
            <in>CwiseUnaryView.h</in>
            <in>DenseBase.h</in>
            <in>DenseCoeffsBase.h</in>
            <in>DenseStorage.h</in>
            <in>Diagonal.h</in>
            <in>DiagonalMatrix.h</in>
            <in>DiagonalProduct.h</in>
            <in>Dot.h</in>
            <in>EigenBase.h</in>
            <in>Flagged.h</in>
            <in>ForceAlignedAccess.h</in>
            <in>Functors.h</in>
            <in>Fuzzy.h</in>
            <in>GeneralProduct.h</in>
            <in>GenericPacketMath.h</in>
            <in>GlobalFunctions.h</in>
            <in>IO.h</in>
            <in>Map.h</in>
            <in>MapBase.h</in>
            <in>MathFunctions.h</in>
            <in>Matrix.h</in>
            <in>MatrixBase.h</in>
            <in>NestByValue.h</in>
            <in>NoAlias.h</in>
            <in>NumTraits.h</in>
            <in>PermutationMatrix.h</in>
            <in>PlainObjectBase.h</in>
            <in>ProductBase.h</in>
            <in>Random.h</in>
            <in>Redux.h</in>
            <in>Ref.h</in>
            <in>Replicate.h</in>
            <in>ReturnByValue.h</in>
            <in>Reverse.h</in>
            <in>Select.h</in>
            <in>SelfAdjointView.h</in>
            <in>SelfCwiseBinaryOp.h</in>
            <in>SolveTriangular.h</in>
            <in>StableNorm.h</in>
            <in>Stride.h</in>
            <in>Swap.h</in>
            <in>Transpose.h</in>
            <in>Transpositions.h</in>
            <in>TriangularMatrix.h</in>
            <in>VectorBlock.h</in>
            <in>VectorwiseOp.h</in>
            <in>Visitor.h</in>
          </df>
          <df name="Eigen2Support">
            <df name="Geometry">
              <in>AlignedBox.h</in>
              <in>All.h</in>
              <in>AngleAxis.h</in>
              <in>Hyperplane.h</in>
              <in>ParametrizedLine.h</in>
              <in>Quaternion.h</in>
              <in>Rotation2D.h</in>
              <in>RotationBase.h</in>
              <in>Scaling.h</in>
              <in>Transform.h</in>
              <in>Translation.h</in>
            </df>
            <in>Block.h</in>
            <in>Cwise.h</in>
            <in>CwiseOperators.h</in>
            <in>LU.h</in>
            <in>Lazy.h</in>
            <in>LeastSquares.h</in>
            <in>Macros.h</in>
            <in>MathFunctions.h</in>
            <in>Memory.h</in>
            <in>Meta.h</in>
            <in>Minor.h</in>
            <in>QR.h</in>
            <in>SVD.h</in>
            <in>TriangularSolver.h</in>
            <in>VectorBlock.h</in>
          </df>
          <df name="Eigenvalues">
            <in>ComplexEigenSolver.h</in>
            <in>ComplexSchur.h</in>
            <in>ComplexSchur_MKL.h</in>
            <in>EigenSolver.h</in>
            <in>GeneralizedEigenSolver.h</in>
            <in>GeneralizedSelfAdjointEigenSolver.h</in>
            <in>HessenbergDecomposition.h</in>
            <in>MatrixBaseEigenvalues.h</in>
            <in>RealQZ.h</in>
            <in>RealSchur.h</in>
            <in>RealSchur_MKL.h</in>
            <in>SelfAdjointEigenSolver.h</in>
            <in>SelfAdjointEigenSolver_MKL.h</in>
            <in>Tridiagonalization.h</in>
          </df>
          <df name="Geometry">
            <df name="arch">
              <in>Geometry_SSE.h</in>
            </df>
            <in>AlignedBox.h</in>
            <in>AngleAxis.h</in>
            <in>EulerAngles.h</in>
            <in>Homogeneous.h</in>
            <in>Hyperplane.h</in>
            <in>OrthoMethods.h</in>
            <in>ParametrizedLine.h</in>
            <in>Quaternion.h</in>
            <in>Rotation2D.h</in>
            <in>RotationBase.h</in>
            <in>Scaling.h</in>
            <in>Transform.h</in>
            <in>Translation.h</in>
            <in>Umeyama.h</in>
          </df>
          <df name="Householder">
            <in>BlockHouseholder.h</in>
            <in>Householder.h</in>
            <in>HouseholderSequence.h</in>
          </df>
          <df name="IterativeLinearSolvers">
            <in>BasicPreconditioners.h</in>
            <in>BiCGSTAB.h</in>
            <in>ConjugateGradient.h</in>
            <in>IncompleteLUT.h</in>
            <in>IterativeSolverBase.h</in>
          </df>
          <df name="Jacobi">
            <in>Jacobi.h</in>
          </df>
          <df name="LU">
            <df name="arch">
              <in>Inverse_SSE.h</in>
            </df>
            <in>Determinant.h</in>
            <in>FullPivLU.h</in>
            <in>Inverse.h</in>
            <in>PartialPivLU.h</in>
            <in>PartialPivLU_MKL.h</in>
          </df>
          <df name="MetisSupport">
            <in>MetisSupport.h</in>
          </df>
          <df name="misc">
            <in>Image.h</in>
            <in>Kernel.h</in>
            <in>Solve.h</in>
            <in>SparseSolve.h</in>
            <in>blas.h</in>
          </df>
          <df name="OrderingMethods">
            <in>Amd.h</in>
            <in>Eigen_Colamd.h</in>
            <in>Ordering.h</in>
          </df>
          <df name="PardisoSupport">
            <in>PardisoSupport.h</in>
          </df>
          <df name="PaStiXSupport">
            <in>PaStiXSupport.h</in>
          </df>
          <df name="plugins">
            <in>ArrayCwiseBinaryOps.h</in>
            <in>ArrayCwiseUnaryOps.h</in>
            <in>BlockMethods.h</in>
            <in>CommonCwiseBinaryOps.h</in>
            <in>CommonCwiseUnaryOps.h</in>
            <in>MatrixCwiseBinaryOps.h</in>
            <in>MatrixCwiseUnaryOps.h</in>
          </df>
          <df name="QR">
            <in>ColPivHouseholderQR.h</in>
            <in>ColPivHouseholderQR_MKL.h</in>
            <in>FullPivHouseholderQR.h</in>
            <in>HouseholderQR.h</in>
            <in>HouseholderQR_MKL.h</in>
          </df>
          <df name="SparseCholesky">
            <in>SimplicialCholesky.h</in>
            <in>SimplicialCholesky_impl.h</in>
          </df>
          <df name="SparseCore">
            <in>AmbiVector.h</in>
            <in>CompressedStorage.h</in>
            <in>ConservativeSparseSparseProduct.h</in>
            <in>MappedSparseMatrix.h</in>
            <in>SparseBlock.h</in>
            <in>SparseColEtree.h</in>
            <in>SparseCwiseBinaryOp.h</in>
            <in>SparseCwiseUnaryOp.h</in>
            <in>SparseDenseProduct.h</in>
            <in>SparseDiagonalProduct.h</in>
            <in>SparseDot.h</in>
            <in>SparseFuzzy.h</in>
            <in>SparseMatrix.h</in>
            <in>SparseMatrixBase.h</in>
            <in>SparsePermutation.h</in>
            <in>SparseProduct.h</in>
            <in>SparseRedux.h</in>
            <in>SparseSelfAdjointView.h</in>
            <in>SparseSparseProductWithPruning.h</in>
            <in>SparseTranspose.h</in>
            <in>SparseTriangularView.h</in>
            <in>SparseUtil.h</in>
            <in>SparseVector.h</in>
            <in>SparseView.h</in>
            <in>TriangularSolver.h</in>
          </df>
          <df name="SparseLU">
            <in>SparseLU.h</in>
            <in>SparseLUImpl.h</in>
            <in>SparseLU_Memory.h</in>
            <in>SparseLU_Structs.h</in>
            <in>SparseLU_SupernodalMatrix.h</in>
            <in>SparseLU_Utils.h</in>
            <in>SparseLU_column_bmod.h</in>
            <in>SparseLU_column_dfs.h</in>
            <in>SparseLU_copy_to_ucol.h</in>
            <in>SparseLU_gemm_kernel.h</in>
            <in>SparseLU_heap_relax_snode.h</in>
            <in>SparseLU_kernel_bmod.h</in>
            <in>SparseLU_panel_bmod.h</in>
            <in>SparseLU_panel_dfs.h</in>
            <in>SparseLU_pivotL.h</in>
            <in>SparseLU_pruneL.h</in>
            <in>SparseLU_relax_snode.h</in>
          </df>
          <df name="SparseQR">
            <in>SparseQR.h</in>
          </df>
          <df name="SPQRSupport">
            <in>SuiteSparseQRSupport.h</in>
          </df>
          <df name="StlSupport">
            <in>StdDeque.h</in>
            <in>StdList.h</in>
            <in>StdVector.h</in>
            <in>details.h</in>
          </df>
          <df name="SuperLUSupport">
            <in>SuperLUSupport.h</in>
          </df>
          <df name="SVD">
            <in>JacobiSVD.h</in>
            <in>JacobiSVD_MKL.h</in>
            <in>UpperBidiagonalization.h</in>
          </df>
          <df name="UmfPackSupport">
            <in>UmfPackSupport.h</in>
          </df>
        </df>
        <in>Array</in>
        <in>Cholesky</in>
        <in>CholmodSupport</in>
        <in>Core</in>
        <in>Dense</in>
        <in>Eigen</in>
        <in>Eigenvalues</in>
        <in>Geometry</in>
        <in>Householder</in>
        <in>IterativeLinearSolvers</in>
        <in>Jacobi</in>
        <in>LU</in>
        <in>MetisSupport</in>
        <in>OrderingMethods</in>
        <in>PaStiXSupport</in>
        <in>PardisoSupport</in>
        <in>QR</in>
        <in>QtAlignedMalloc</in>
        <in>SPQRSupport</in>
        <in>SVD</in>
        <in>SparseCore</in>
        <in>SparseQR</in>
        <in>SuperLUSupport</in>
        <in>UmfPackSupport</in>
      </df>
      <in>FusionEKF.cpp</in>
      <in>FusionEKF.h</in>
      <in>ground_truth_package.h</in>
      <in>kalman_filter.cpp</in>
      <in>kalman_filter.h</in>
      <in>main.cpp</in>
      <in>measurement_package.h</in>
      <in>tools.cpp</in>
      <in>tools.h</in>
    </df>
  </logicalFolder>
  <projectmakefile></projectmakefile>
  <confs>
    <conf name="dataset_1" type="0">
      <toolsSet>
        <developmentServer>localhost</developmentServer>
        <platform>2</platform>
      </toolsSet>
      <compile>
        <compiledirpicklist>
          <compiledirpicklistitem>.</compiledirpicklistitem>
          <compiledirpicklistitem>${AUTO_FOLDER}</compiledirpicklistitem>
        </compiledirpicklist>
        <compiledir>${AUTO_FOLDER}</compiledir>
        <compilecommandpicklist>
          <compilecommandpicklistitem>${MAKE} ${ITEM_NAME}.o</compilecommandpicklistitem>
          <compilecommandpicklistitem>${AUTO_COMPILE}</compilecommandpicklistitem>
        </compilecommandpicklist>
        <compilecommand>${AUTO_COMPILE}</compilecommand>
      </compile>
      <dbx_gdbdebugger version="1">
        <gdb_pathmaps>
        </gdb_pathmaps>
        <gdb_interceptlist>
          <gdbinterceptoptions gdb_all="false" gdb_unhandled="true" gdb_unexpected="true"/>
        </gdb_interceptlist>
        <gdb_options>
          <DebugOptions>
          </DebugOptions>
        </gdb_options>
        <gdb_buildfirst gdb_buildfirst_overriden="false" gdb_buildfirst_old="false"/>
      </dbx_gdbdebugger>
      <nativedebugger version="1">
        <engine>gdb</engine>
      </nativedebugger>
      <runprofile version="9">
        <runcommandpicklist>
          <runcommandpicklistitem>"${OUTPUT_PATH} ../data/ output.txt"</runcommandpicklistitem>
          <runcommandpicklistitem>"${OUTPUT_PATH} ../data/"${OUTPUT_PATH} ../data/ output.txt" output.txt"</runcommandpicklistitem>
          <runcommandpicklistitem>"${OUTPUT_PATH} ../data/sample-laser-radar-measurement-data-1.txt output.txt"</runcommandpicklistitem>
          <runcommandpicklistitem>"${OUTPUT_PATH}"</runcommandpicklistitem>
          <runcommandpicklistitem>"${OUTPUT_PATH}" </runcommandpicklistitem>
          <runcommandpicklistitem>"${OUTPUT_PATH}" ../data/sample-laser-radar-measurement-data-1.txt output.txt</runcommandpicklistitem>
        </runcommandpicklist>
        <runcommand>"${OUTPUT_PATH}" ../data/sample-laser-radar-measurement-data-1.txt output.txt</runcommand>
        <rundir>../build</rundir>
        <buildfirst>false</buildfirst>
        <terminal-type>0</terminal-type>
        <remove-instrumentation>0</remove-instrumentation>
        <environment>
        </environment>
      </runprofile>
    </conf>
    <conf name="dataset_2" type="0">
      <toolsSet>
        <developmentServer>localhost</developmentServer>
        <platform>2</platform>
      </toolsSet>
      <compile>
        <compiledirpicklist>
          <compiledirpicklistitem>.</compiledirpicklistitem>
          <compiledirpicklistitem>${AUTO_FOLDER}</compiledirpicklistitem>
        </compiledirpicklist>
        <compiledir>${AUTO_FOLDER}</compiledir>
        <compilecommandpicklist>
          <compilecommandpicklistitem>${MAKE} ${ITEM_NAME}.o</compilecommandpicklistitem>
          <compilecommandpicklistitem>${AUTO_COMPILE}</compilecommandpicklistitem>
        </compilecommandpicklist>
        <compilecommand>${AUTO_COMPILE}</compilecommand>
      </compile>
      <dbx_gdbdebugger version="1">
        <gdb_pathmaps>
        </gdb_pathmaps>
        <gdb_interceptlist>
          <gdbinterceptoptions gdb_all="false" gdb_unhandled="true" gdb_unexpected="true"/>
        </gdb_interceptlist>
        <gdb_options>
          <DebugOptions>
          </DebugOptions>
        </gdb_options>
        <gdb_buildfirst gdb_buildfirst_overriden="false" gdb_buildfirst_old="false"/>
      </dbx_gdbdebugger>
      <nativedebugger version="1">
        <engine>gdb</engine>
      </nativedebugger>
      <runprofile version="9">
        <runcommandpicklist>
          <runcommandpicklistitem>"${OUTPUT_PATH} ../data/ output.txt"</runcommandpicklistitem>
          <runcommandpicklistitem>"${OUTPUT_PATH} ../data/"${OUTPUT_PATH} ../data/ output.txt" output.txt"</runcommandpicklistitem>
          <runcommandpicklistitem>"${OUTPUT_PATH} ../data/sample-laser-radar-measurement-data-1.txt output.txt"</runcommandpicklistitem>
          <runcommandpicklistitem>"${OUTPUT_PATH}"</runcommandpicklistitem>
          <runcommandpicklistitem>"${OUTPUT_PATH}" </runcommandpicklistitem>
          <runcommandpicklistitem>"${OUTPUT_PATH}" ../data/sample-laser-radar-measurement-data-1.txt output.txt</runcommandpicklistitem>
          <runcommandpicklistitem>"${OUTPUT_PATH}" ../data/sample-laser-radar-measurement-data-2.txt output.txt</runcommandpicklistitem>
        </runcommandpicklist>
        <runcommand>"${OUTPUT_PATH}" ../data/sample-laser-radar-measurement-data-2.txt output.txt</runcommand>
        <rundir>../build</rundir>
        <buildfirst>false</buildfirst>
        <terminal-type>0</terminal-type>
        <remove-instrumentation>0</remove-instrumentation>
        <environment>
        </environment>
      </runprofile>
    </conf>
  </confs>
</configurationDescriptor>
